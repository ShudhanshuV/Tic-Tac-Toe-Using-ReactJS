{"version":3,"sources":["components/Login.js","components/Result.js","components/Nav.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Login","state","player1","player2","handleChange","event","console","log","target","value","player","id","setState","handleClick","preventDefault","props","names","className","type","onChange","this","required","onClick","React","Component","Result","tied","playerwin","winner","result","Nav","ties","userName1","userName2","Board","createTiles","allTiles","i","push","handleScore","tile","classList","length","play","document","getElementsByClassName","reset","turn","remove","innerHTML","diagonal","row","column","left","getElementById","right","row1","row2","row3","column1","column2","column3","add","map","element","Game","check","handleTurn","firstPlayer","firstBoolean","secondPlayer","secondBoolean","App","showLogin","showResult","handleName","handleResult","input","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c4521db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Login extends React.Component {\r\n    state ={\r\n        player1: \"\",\r\n        player2: \"\",\r\n    }\r\n\r\n    handleChange=(event) =>{\r\n        console.log(event.target.value);\r\n\r\n        let player = event.target.id;\r\n        this.setState({ [player]: event.target.value});\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        event.preventDefault();\r\n        const {player1, player2} = this.state;\r\n        this.props.names(player1, player2);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"form-wrapper\">\r\n                <div className=\"form-container\">\r\n                    <form>\r\n                        <h1>Please enter player's name:</h1>\r\n                        <div className=\"form-group\">\r\n                            <label>Player 1:</label>\r\n                            <input type=\"name\" id=\"player1\" className=\"form-input\" onChange={this.handleChange} required/>\r\n                            <br/>\r\n                            <label>Player 2:</label>\r\n                            <input type=\"text\" id=\"player2\" className=\"form-input\" onChange={this.handleChange} required/>\r\n                        </div>\r\n\r\n                        <button className=\"btn primary-btn\" onClick={this.handleClick}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nclass Result extends React.Component {\r\n    state = {\r\n        tied: \"Match tied ðŸ™„\",\r\n        playerwin: \"Yeah! You won \" + this.props.winner + \"ðŸ¤©\"\r\n    };\r\n\r\n    handleClick = () =>{\r\n        this.props.result(false);\r\n    };\r\n\r\n    render(){\r\n        const{winner} = this.props;\r\n        const {tied, playerwin} = this.state;\r\n\r\n        return(\r\n            <div className=\"form-wrapper\">\r\n                <div className=\"form-container\">\r\n                    <p>{winner === \"Tied\" ? tied : playerwin}</p>\r\n\r\n                    <button className=\"btn primary-btn\" onClick={this.handleClick}>Play Again</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default Result;","import React from 'react'\r\n\r\nclass Nav extends React.Component {\r\n    render(){\r\n        const {player1, player2, ties, userName1, userName2} = this.props;\r\n\r\n        return(\r\n            <div className=\"navbar\">\r\n                <div className=\"heading\">\r\n                    <h1>Tic Tac Toe</h1>\r\n                </div>\r\n\r\n                <div className=\"status\">\r\n                    <h2>\r\n                        {userName1}: {player1}\r\n                    </h2>\r\n\r\n                    <h2>\r\n                        {userName2}: {player2}\r\n                    </h2>\r\n\r\n                    <h2>\r\n                        Ties: {ties}\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nclass Board extends React.Component {\r\n    createTiles = () =>{\r\n        let allTiles = [];\r\n        for(let i =0; i < 9; i++){\r\n            allTiles.push(\"tile not-played\");\r\n        } \r\n        return allTiles;\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        const { handleScore, result } = this.props;\r\n        let tile = event.target;\r\n        if(tile.classList.length === 2){\r\n            this.play(tile);\r\n        }\r\n\r\n        let allTiles = document.getElementsByClassName(\"not-played\");\r\n        if(allTiles.length < 1){\r\n            handleScore(\"ties\");\r\n            result(true);\r\n            this.reset();\r\n        } \r\n    }\r\n    \r\n    play = (tile) => {\r\n        const {player1, player2, turn, handleScore, result} = this.props;\r\n        tile.classList.remove(\"not-played\");\r\n\r\n        if(player1){\r\n            tile.innerHTML = \"X\";\r\n            turn(\"player1\", false, \"player2\", true);\r\n            if(this.diagonal(\"X\") || this.row(\"X\") || this.column(\"X\")) {\r\n                handleScore('player1');\r\n                result(true);\r\n                this.reset();\r\n            }\r\n        }\r\n\r\n        if (player2) {\r\n            tile.innerHTML = \"O\";\r\n            turn(\"player2\", false, \"player1\" , true);\r\n            if (this.diagonal(\"O\") || this.row(\"O\") || this.column(\"O\")) {\r\n                handleScore(\"player2\");\r\n                result(true);\r\n                this.reset()\r\n            }\r\n        }\r\n    };\r\n\r\n    diagonal = (play) => {\r\n        let left = [\r\n            document.getElementById('tile0').innerHTML,\r\n            document.getElementById('tile4').innerHTML,\r\n            document.getElementById(\"tile8\").innerHTML\r\n        ];\r\n\r\n        let right = [\r\n            document.getElementById('tile2').innerHTML,\r\n            document.getElementById('tile4').innerHTML,\r\n            document.getElementById('tile6').innerHTML\r\n        ]\r\n\r\n        if (left[0] === play && left[1] === play && left[2] === play) {\r\n            return true;\r\n        }\r\n\r\n        if (right[0] === play && right[1] === play && right[2] === play) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    row = (play) => {\r\n        let row1 = [\r\n            document.getElementById('tile0').innerHTML,\r\n            document.getElementById('tile1').innerHTML,\r\n            document.getElementById('tile2').innerHTML\r\n        ]\r\n\r\n        let row2 = [\r\n            document.getElementById('tile3').innerHTML,\r\n            document.getElementById('tile4').innerHTML,\r\n            document.getElementById('tile5').innerHTML\r\n        ]\r\n\r\n        let row3 = [\r\n            document.getElementById('tile6').innerHTML,\r\n            document.getElementById('tile7').innerHTML,\r\n            document.getElementById('tile8').innerHTML\r\n        ]\r\n\r\n        if (row1[0]=== play && row1[1] === play && row1[2] === play) {\r\n            return true;\r\n        }\r\n\r\n        if (row2[0]=== play && row2[1] === play && row2[2] === play) {\r\n            return true;\r\n        }\r\n\r\n        if (row3[0]=== play && row3[1] === play && row3[2] === play) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    column = (play) => {\r\n        let column1 = [\r\n            document.getElementById('tile0').innerHTML,\r\n            document.getElementById('tile3').innerHTML,\r\n            document.getElementById('tile6').innerHTML\r\n        ]\r\n\r\n        let column2 = [\r\n            document.getElementById('tile1').innerHTML,\r\n            document.getElementById('tile4').innerHTML,\r\n            document.getElementById('tile7').innerHTML\r\n        ]\r\n\r\n        let column3 = [\r\n            document.getElementById('tile2').innerHTML,\r\n            document.getElementById('tile5').innerHTML,\r\n            document.getElementById('tile8').innerHTML\r\n        ]\r\n\r\n        if (column1[0] === play && column1[1]===play && column1[2]===play){\r\n            return true;\r\n        }\r\n\r\n        if (column2[0] === play && column2[1]===play && column2[2]===play){\r\n            return true;\r\n        }\r\n\r\n        if (column3[0] === play && column3[1]===play && column3[2]===play){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    reset = () => {\r\n        let allTiles = document.getElementsByClassName('tile')\r\n        for(let i=0; i<allTiles.length; i++){\r\n            allTiles[i].innerHTML = \"\";\r\n            allTiles[i].classList.add('not-played')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                {this.createTiles().map((element, i) => {\r\n                    return(\r\n                        <div id={`tile${i}`} key={i} className={element} onClick={this.handleClick}></div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from \"./Board\";\r\n\r\nclass Game extends React.Component {\r\n    state ={\r\n        player1: true,\r\n        player2: false,\r\n        check: true\r\n    };\r\n\r\n    handleTurn = (firstPlayer, firstBoolean, secondPlayer, secondBoolean) => {\r\n        this.setState({\r\n            [firstPlayer]: firstBoolean,\r\n            [secondPlayer]: secondBoolean\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {player1, player2} = this.state;\r\n        const {userName1, userName2, result} = this.props;\r\n\r\n        return(\r\n            <div className=\"game\">\r\n                <p>Your turn now, {player1 ? userName1 : userName2}</p>\r\n\r\n                <Board\r\n                    turn = {this.handleTurn}\r\n                    player1 = {player1}\r\n                    player2 = {player2}\r\n                    handleScore = {this.props.handleScore}\r\n                    result={result}\r\n                /> \r\n\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Login from './components/Login';\nimport Result from './components/Result';\nimport Nav from './components/Nav';\nimport Game from './components/Game';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    ties: 0,\n    userName1: \"Player1\",\n    userName2: \"Player2\",\n    winner: \"\",\n    player1: 0,\n    player2: 0,\n    showLogin: true,\n    showResult: false\n  };\n\n  handleScore = (player) => {\n    const {userName1, userName2} = this.state;\n    let winner;\n\n    if(player === \"player1\") {\n      winner = userName1\n    } else if (player === \"player2\") {\n      winner = userName2\n    } else {\n      winner = \"Tied\"\n    }\n\n    this.setState ({\n      [player]: this.state[player] + 1,\n      winner: winner\n    })\n  }\n\n  handleName = (player1, player2) => {\n    this.setState({\n      userName1: player1,\n      userName2: player2,\n      showLogin: false\n    })\n  }\n\n  handleResult = (input) => {\n    this.setState({\n      showResult: input\n    })\n  }\n\n  render(){\n    const {\n      ties,\n      player1,\n      player2,\n      showLogin,\n      userName1,\n      userName2,\n      showResult,\n      winner\n    } = this.state\n\n    return (\n      <div className=\"App\">\n          {showResult ? (<Result winner={winner} result= {this.handleResult} />) : null}\n\n          {showLogin ? <Login names={this.handleName} /> : null}\n\n          <Nav \n            ties={ties}\n            userName1 ={userName1}\n            userName2 = {userName2}\n            player1 = {player1}\n            player2 = {player2}\n          />\n\n          <Game\n            userName1 = {userName1}\n            userName2 = {userName2}\n            result = {this.handleResult}\n            handleScore = {this.handleScore}\n          />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}